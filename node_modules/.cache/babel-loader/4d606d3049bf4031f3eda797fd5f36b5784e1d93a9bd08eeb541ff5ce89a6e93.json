{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\vs_code\\\\uploading image\\\\image_upload\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { addDoc, collection, getCountFromServer } from \"firebase/firestore\";\nimport { db, auth, storage } from \"./firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { isspace } from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost({\n  isAuth\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [urls, setUrls] = useState(\"\");\n  const [type, setType] = useState(null);\n  const urlarray = [];\n  const uploadImage = () => {\n    if (image === null) return;\n    const subfolder = \"post\" + v4();\n    for (let i = 0; i < image.length; i++) {\n      console.log(image[i].type);\n      if (image[i].type === \"image/jpeg\" || image[i].type === \"image/png\" || image[i].type === \"image/jpg\") {\n        setType(\"image\");\n      } else if (image[i].type === \"video/mp4\") {\n        setType(\"video\");\n      }\n      const imageRef = ref(storage, `images/${subfolder}/${image[i].name + v4()}`);\n      uploadBytes(imageRef, image[i]).then(snap => {\n        getDownloadURL(snap.ref).then(url => {\n          urlarray.push(url);\n        });\n      });\n    }\n    setUrls(urlarray).then(() => {\n      console.warn(\"uploaded\");\n    });\n  };\n  const createPost = async () => {\n    if (urls === \"\" && !isspace(title) && !isspace(postText)) {\n      navigate(\"/\");\n      return;\n    }\n    const allposts = await getCountFromServer(postsCollectionRef);\n    await addDoc(postsCollectionRef, {\n      title,\n      postText,\n      type,\n      urls: urls,\n      number_of_posts: allposts.data().count,\n      author: {\n        name: auth.currentUser.displayName,\n        id: auth.currentUser.uid\n      }\n    });\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"/login\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cpContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Title..\",\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Post...\",\n          onChange: event => {\n            setPostText(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: event => {\n            setImage(event.target.files);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadImage,\n          className: \"add\",\n          children: \"ADD FILE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"1BzUKggBtxKRgZm9LsdIdSi484I=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useEffect","useState","addDoc","collection","getCountFromServer","db","auth","storage","useNavigate","getDownloadURL","ref","uploadBytes","v4","isspace","jsxDEV","_jsxDEV","CreatePost","isAuth","_s","title","setTitle","postText","setPostText","postsCollectionRef","navigate","image","setImage","urls","setUrls","type","setType","urlarray","uploadImage","subfolder","i","length","console","log","imageRef","name","then","snap","url","push","warn","createPost","allposts","number_of_posts","data","count","author","currentUser","displayName","id","uid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","event","target","value","multiple","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/vs_code/uploading image/image_upload/src/pages/CreatePost.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { addDoc, collection, getCountFromServer } from \"firebase/firestore\";\r\nimport { db, auth, storage } from \"./firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { v4 } from \"uuid\";\r\nimport { isspace } from \"./Home\";\r\n\r\nfunction CreatePost({ isAuth }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [postText, setPostText] = useState(\"\");\r\n\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n  let navigate = useNavigate();\r\n  const [image, setImage] = useState(null);\r\n  const [urls, setUrls] = useState(\"\");\r\n  const [type, setType] = useState(null);\r\n\r\n  const urlarray = [];\r\n  const uploadImage = () => {\r\n    if (image === null) return;\r\n\r\n    const subfolder = \"post\" + v4();\r\n    for (let i = 0; i < image.length; i++) {\r\n      console.log(image[i].type);\r\n      if (\r\n        image[i].type === \"image/jpeg\" ||\r\n        image[i].type === \"image/png\" ||\r\n        image[i].type === \"image/jpg\"\r\n      ) {\r\n        setType(\"image\");\r\n      } else if (image[i].type === \"video/mp4\") {\r\n        setType(\"video\");\r\n      }\r\n      const imageRef = ref(\r\n        storage,\r\n        `images/${subfolder}/${image[i].name + v4()}`\r\n      );\r\n\r\n      uploadBytes(imageRef, image[i]).then((snap) => {\r\n        getDownloadURL(snap.ref).then((url) => {\r\n          urlarray.push(url);\r\n        });\r\n      });\r\n    }\r\n    setUrls(urlarray).then(() => {\r\n      console.warn(\"uploaded\");\r\n    });\r\n  };\r\n  const createPost = async () => {\r\n    if (urls === \"\" && !isspace(title) && !isspace(postText)) {\r\n      navigate(\"/\");\r\n\r\n      return;\r\n    }\r\n\r\n    const allposts = await getCountFromServer(postsCollectionRef);\r\n    await addDoc(postsCollectionRef, {\r\n      title,\r\n      postText,\r\n      type,\r\n      urls: urls,\r\n      number_of_posts: allposts.data().count,\r\n      author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\r\n    });\r\n\r\n    navigate(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <div className=\"cpContainer\">\r\n        <h1>Create a Post</h1>\r\n        <div className=\"inputGp\">\r\n          <label>Title :</label>\r\n          <input\r\n            placeholder=\"Title..\"\r\n            onChange={(event) => {\r\n              setTitle(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"inputGp\">\r\n          <label>Post :</label>\r\n          <textarea\r\n            placeholder=\"Post...\"\r\n            onChange={(event) => {\r\n              setPostText(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            onChange={(event) => {\r\n              setImage(event.target.files);\r\n            }}\r\n          />\r\n          <br />{\" \"}\r\n          <button onClick={uploadImage} className=\"add\">\r\n            ADD FILE\r\n          </button>\r\n        </div>\r\n\r\n        <button onClick={createPost}>Submit Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}