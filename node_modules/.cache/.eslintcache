[{"C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\Login.js":"4","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\CreatePost.js":"5","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\Home.js":"6","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\firebase-config.js":"7"},{"size":513,"mtime":1695234412703,"results":"8","hashOfConfig":"9"},{"size":1245,"mtime":1696088715289,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1695231528949,"results":"11","hashOfConfig":"9"},{"size":720,"mtime":1695338927813,"results":"12","hashOfConfig":"9"},{"size":3515,"mtime":1697090017735,"results":"13","hashOfConfig":"9"},{"size":3165,"mtime":1697089644606,"results":"14","hashOfConfig":"9"},{"size":936,"mtime":1695964411890,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"17mgeuh",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\index.js",[],[],["40"],"C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\App.js",[],[],"C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\reportWebVitals.js",[],[],"C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\Login.js",[],[],"C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\CreatePost.js",["41","42"],[],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { addDoc, collection, getCountFromServer } from \"firebase/firestore\";\r\nimport { db, auth, storage } from \"./firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { v4 } from \"uuid\";\r\nimport { isspace } from \"./Home\";\r\n\r\nfunction CreatePost({ isAuth }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [postText, setPostText] = useState(\"\");\r\n\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n  let navigate = useNavigate();\r\n  const [image, setImage] = useState(null);\r\n  const [urls, setUrls] = useState(\"\");\r\n  const [type, setType] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n\r\n  const urlarray = [];\r\n  const uploadImage = () => {\r\n    if (image === null) return;\r\n\r\n    const subfolder = \"post\" + v4();\r\n    let uploadNumber = 0;\r\n    for (let i = 0; i < image.length; i++) {\r\n      console.log(image[i].type);\r\n      if (\r\n        image[i].type === \"image/jpeg\" ||\r\n        image[i].type === \"image/png\" ||\r\n        image[i].type === \"image/jpg\"\r\n      ) {\r\n        setType(\"image\");\r\n      } else if (image[i].type === \"video/mp4\") {\r\n        setType(\"video\");\r\n      }\r\n      const imageRef = ref(\r\n        storage,\r\n        `images/${subfolder}/${image[i].name + v4()}`\r\n      );\r\n\r\n      uploadBytes(imageRef, image[i]).then((snap) => {\r\n        getDownloadURL(snap.ref).then((url) => {\r\n          urlarray.push(url);\r\n          uploadNumber++;\r\n          if (uploadNumber === image.length) {\r\n            setUrls(urlarray);\r\n            setUploadStatus(\"Uploaded!!!!\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n  const createPost = async () => {\r\n    if (urls === \"\" && !isspace(title) && !isspace(postText)) {\r\n      navigate(\"/\");\r\n\r\n      return;\r\n    }\r\n\r\n    const allposts = await getCountFromServer(postsCollectionRef);\r\n    await addDoc(postsCollectionRef, {\r\n      title,\r\n      postText,\r\n      type,\r\n      urls: urls,\r\n      number_of_posts: allposts.data().count,\r\n      author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\r\n    });\r\n\r\n    navigate(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <div className=\"cpContainer\">\r\n        <h1>Create a Post</h1>\r\n        <div className=\"inputGp\">\r\n          <label>Title :</label>\r\n          <input\r\n            placeholder=\"Title..\"\r\n            onChange={(event) => {\r\n              setTitle(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"inputGp\">\r\n          <label>Post :</label>\r\n          <textarea\r\n            placeholder=\"Post...\"\r\n            onChange={(event) => {\r\n              setPostText(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            onChange={(event) => {\r\n              setImage(event.target.files);\r\n            }}\r\n            \r\n          />\r\n          <br />{\" \"}\r\n          <p>\r\n            <button onClick={uploadImage} className=\"add\">\r\n              ADD FILE\r\n            </button>\r\n            <h3 className=\"uploaded\">{uploadStatus}</h3>\r\n          </p>\r\n        </div>\r\n\r\n        <button onClick={createPost}>Submit Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\Home.js",["43","44"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { getDocs, collection, doc, deleteDoc } from \"firebase/firestore\";\r\nimport { db } from \"./firebase-config\";\r\nimport { auth, storage } from \"./firebase-config\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\n\r\nfunction isspace(x) {\r\n  for (let i of x) {\r\n    if (i !== \" \") return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction Home({ isAuth }) {\r\n  const [postLists, setPostLists] = useState([]);\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      const data = await getDocs(postsCollectionRef);\r\n      setPostLists(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    getPosts();\r\n  }, []);\r\n\r\n  const deletePost = async (id) => {\r\n    const postDoc = doc(db, \"posts\", id.id);\r\n    if (id.urls !== null) {\r\n      for (let i = 0; i < id.urls.length; i++) {\r\n        const desertRef = ref(storage, id.urls[i]);\r\n        deleteObject(desertRef);\r\n      }\r\n    }\r\n    await deleteDoc(postDoc);\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div className=\"homePage\">\r\n      <h1>âŒ‚ Blogs </h1>\r\n      {postLists.map((post) => {\r\n        return (\r\n          <div className=\"post\" key={post.id}>\r\n            <div className=\"postHeader\">\r\n              <div className=\"title\">\r\n                <h1>{post.title}</h1>\r\n              </div>\r\n              <div className=\"deletePost\">\r\n                {isAuth && post.author.id === auth.currentUser.uid && (\r\n                  <button\r\n                    onClick={() => {\r\n                      deletePost(post);\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    &#128465;\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {post.type === \"image\" &&\r\n              post.urls.map((a) => {\r\n                return (\r\n                  <div>\r\n                    <a href={a}>\r\n                      <img src={a} />\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })}\r\n            {post.type === \"video\" &&\r\n              post.urls.map((a) => {\r\n                return (\r\n                  <div>\r\n                    <video\r\n                      controls=\"controls\"\r\n                      poster=\"https://firebasestorage.googleapis.com/v0/b/blog-project-3100.appspot.com/o/images%2Fpost597d32a6-f3f7-491c-a797-f01ede732c74%2F178.jpgd533ee3b-d8ea-4cbb-a735-f74cd1d7c32d?alt=media&token=cf8d1cf5-8bc3-45df-b55c-983c9a2e70be&_gl=1*s0dikb*_ga*NzgyMjI1MDk3LjE2OTEwMDQyODM.*_ga_CW55HF8NVT*MTY5Njg2OTY3NS40Ni4xLjE2OTY4NzAxMzcuNTYuMC4w\"\r\n                      mute=\"true\"\r\n                    >\r\n                      <source src={a} type=\"video/mp4\" />\r\n                    </video>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n            {isspace(post.postText) && (\r\n              <div className=\"postTextContainer\">ðŸ‘‰{post.postText}</div>\r\n            )}\r\n\r\n            <h3>@{post.author.name}</h3>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\nexport { isspace };\r\n","C:\\Users\\Asus\\Desktop\\vs_code\\uploading image\\image_upload\\src\\pages\\firebase-config.js",[],[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":43,"column":44,"nodeType":"49","messageId":"50","endLine":52,"endColumn":8},{"ruleId":"51","severity":1,"message":"52","line":78,"column":6,"nodeType":"53","endLine":78,"endColumn":8,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":23,"column":6,"nodeType":"53","endLine":23,"endColumn":8,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":65,"column":23,"nodeType":"59","endLine":65,"endColumn":38},"no-new-object",["60"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'uploadNumber', 'uploadNumber'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has a missing dependency: 'postsCollectionRef'. Either include it or remove the dependency array.",["62"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-object-constructor",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"67","text":"68"},"Update the dependencies array to be: [postsCollectionRef]",{"range":"69","text":"70"},[2317,2319],"[isAuth, navigate]",[738,740],"[postsCollectionRef]"]